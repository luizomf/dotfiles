#!/bin/sh
# vim: set filetype=sh :

function dtouch() {
  mkdir -p "$(dirname "$1")"
  touch "$1"
}

function componentTs() {
  # code -r src/components/"$1"/index.tsx src/components/"$1"/"$1".tsx src/components/"$1"/"$1".module.css
  mkdir -p src/components/"$1"
  zed -a src/components/"$1"/index.tsx
  zed -a src/components/"$1"/"$1".spec.tsx
  zed -a src/components/"$1"/"$1".test.tsx
  zed -a src/components/"$1"/"$1".stories.tsx
  zed -a src/components/"$1"/"$1".module.css
}

function componentJs() {
  code -r src/components/"$1"/styles.js src/components/"$1"/index.jsx src/components/"$1"/stories.jsx src/components/"$1"/"$1".spec.jsx
}

function aula_c() {
  [ -z "$1" ] && echo "Empty Param, send a class name" && return
  ffmpeg -i \
    "/Users/luizotavio/Desktop/$1.mp4" -vf "scale=1920:1080" -sws_flags lanczos \
    -c:v libx264 -crf 23 -preset slow -c:a aac -b:a 160k \
    "/Users/luizotavio/Desktop/$1-c.mp4"
}

function memoryUsage() {
  ps -A -o rss,comm | grep -E "$1" | grep -v grep | awk '{ sum += $1 } END { printf "%.2f MB\n", sum / 1024 }'
}

function deletePythonCache() {
    echo "Limpando diretÃ³rios de cache e build..."

    deactivate
    find . -type d \( -name "__pycache__" -o -name ".pytest_cache" -o -name ".tox" -o -name "*.egg-info" -o -name "build" -o -name "dist" \) -exec rm -r {} \;
    find . -type f \( -name "*.pyc" -o -name "*.pyo" \) -delete

    echo "Limpeza concluÃ­da com sucesso!"
}

function iterm() {
    cwd=$(pwd)
    open -a iterm $cwd
}

restart_terminal() {
    fc -W       # Salva histÃ³rico atual
    tmux clear-history 2>/dev/null || true # Limpa o histÃ³rico do tmux
    clear       # Limpa tela
    printf '\033c'  # Reset visual do terminal
    exec zsh    # Recarrega tudo
}

function show_fg_colors() {
  echo
  echo "ðŸŽ¨ Foreground colors (0â€“255):"
  for i in {0..255}; do
    local label=""
    case $i in
      0) label="black" ;;
      1) label="red" ;;
      2) label="green" ;;
      3) label="yellow" ;;
      4) label="blue" ;;
      5) label="magenta" ;;
      6) label="cyan" ;;
      7) label="white" ;;
      8) label="brightblack (gray)" ;;
      9) label="brightred" ;;
      10) label="brightgreen" ;;
      11) label="brightyellow" ;;
      12) label="brightblue" ;;
      13) label="brightmagenta" ;;
      14) label="brightcyan" ;;
      15) label="brightwhite" ;;
    esac
    print -P "%F{$i}â–ˆ  %3d  %-22s%f" $i "$label"
  done
}


function show_bg_colors() {
  echo
  echo "ðŸ§± Background colors (0â€“255):"
  for i in {0..255}; do
    local label=""
    case $i in
      0) label="black" ;;
      1) label="red" ;;
      2) label="green" ;;
      3) label="yellow" ;;
      4) label="blue" ;;
      5) label="magenta" ;;
      6) label="cyan" ;;
      7) label="white" ;;
      8) label="brightblack (gray)" ;;
      9) label="brightred" ;;
      10) label="brightgreen" ;;
      11) label="brightyellow" ;;
      12) label="brightblue" ;;
      13) label="brightmagenta" ;;
      14) label="brightcyan" ;;
      15) label="brightwhite" ;;
    esac
    print -P "%K{$i}  %-3d %s  %k" $i "$label"
  done
}
